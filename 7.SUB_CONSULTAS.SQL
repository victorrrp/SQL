-- INTRODUÇÃO A SUB-CONSULTAS
-- A QUANTIDADE DE COLUNAS NO WHERE TEM QUE SER A MESMA NO SELECT DE VERIFICAÇÃO


-- CONSULTA PRINCIPAL:
SELECT COD_CONTRATO, DATA, TOTAL
FROM TCONTRATO

/* SUB-CONSULTA(BUSCANDO TODOS OS CURSOS ONDE O VALOR TOTAL SEJA
 MAIOR OU IGUAL QUE O CURSO SELECIONADO. NO CASO, CURSO 3)*/
WHERE TOTAL>=
      (SELECT VALOR FROM TCURSO
       WHERE COD_CURSO = 3);
       

/*EXEMPLO ERRADO. SÓ SE PODE RETORNAR
APENAS 1 LINHA NA SUBCONSULTA*/
SELECT COD_CONTRATO, DATA, TOTAL
FROM TCONTRATO
WHERE TOTAL >=
      (SELECT VALOR FROM TCURSO
       WHERE VALOR > 500);
       
SELECT * FROM TALUNO;

--TODOS OS ALUNOS DA MESMA CIDADE DO ALUNO 1, COM EXCEÇÃO DO ALUNO 1
SELECT COD_ALUNO, NOME, CIDADE
FROM TALUNO
WHERE CIDADE = 
               (SELECT CIDADE FROM TALUNO
                WHERE COD_ALUNO = 2)
AND COD_ALUNO <> 2;

UPDATE TALUNO SET
CIDADE = 'DOIS IRMÃOS'
WHERE COD_ALUNO = 2;

--BUSCANDO ITEM EM MAIS DE UMA COLUNA DA TABELA
SELECT COD_ALUNO, NOME, CIDADE, ESTADO
FROM TALUNO
WHERE (CIDADE, ESTADO) = 
               (SELECT CIDADE, ESTADO FROM TALUNO
                WHERE COD_ALUNO = 2)
AND COD_ALUNO <> 2;


/*FAZENDO SELECT QUE SOME TODOS OS ITENS, E MOSTRE SOMENTE 
O VALOR MINIMO QUE SEJA MAIOR QUE O VALOR MEDIO DOS CURSOS*/
SELECT COD_CURSO, MIN(VALOR), SUM(VALOR),
       COUNT(*) QTD 
FROM TITEM
WHERE COD_CURSO > 0
GROUP BY COD_CURSO   --AGRUPANDO COLUNAS DA TABELA QUE NÃO TÊM FUNÇÃO DE GRUPO 
HAVING MIN(VALOR) >= --UTILIZANDO HAVING NO SUBSELECT PARA COMPARAR VALOR MINIMO
       (SELECT AVG(VALOR) FROM TCURSO)
ORDER BY COD_CURSO;



/*SOMA O TOTAL DE CONTRATO POR ALUNO E MOSTRA SOMENTE O 
MENOR CONTRATO QUE SEJA MAIOR QUE O VALOR MEDIO DE CURSO*/
SELECT COD_ALUNO, MIN(TOTAL), SUM(TOTAL)
FROM TCONTRATO
GROUP BY COD_ALUNO --AGRUPANDO COLUNAS DA TABELA QUE NÃO TÊM FUNÇÃO DE GRUPO
HAVING MIN(TOTAL)> --UTILIZANDO HAVING NO SUBSELECT PARA REALIZAR A COMPARAÇÃO
       (SELECT AVG(VALOR) FROM TCURSO);



/*TODOS OS CURSOS QUE ESTÃO NA TABELA DE ITEM VENDIDOS. UTILIZANDO O OPERADOR 'IN' 
PARA TRABALHAR COM CONJUNTOS. NO CASO, ONDE O COD_CURSO ESTEJA DENTRO DO TITEM*/
SELECT COD_CURSO, NOME, VALOR
FROM TCURSO
WHERE COD_CURSO IN (SELECT COD_CURSO FROM TITEM)
ORDER BY VALOR;

--EXECUTANDO O MESMO COMANDO ACIMA, SÓ QUE DE FORMA ALTERNATIVA. AINDA TRABALHANDO COM CONJUNTOS
SELECT COD_CURSO, NOME, VALOR
FROM TCURSO WHERE COD_CURSO IN (1,2,3,4);

--MAIS UM EXEMPLO
SELECT COD_CURSO, NOME, VALOR
FROM TCURSO
     WHERE COD_CURSO = 1
           OR    COD_CURSO = 2
           OR    COD_CURSO = 3
           OR    COD_CURSO = 4;


--AGORA UTILIZANDO O 'NOT IN'. O RESULTADO SERÁ INVERSO
SELECT COD_CURSO, NOME, VALOR
FROM TCURSO
WHERE COD_CURSO NOT IN (SELECT COD_CURSO FROM TITEM)
ORDER BY VALOR;

--TODOS OS CURSOS QUE FORAM VENDIDOS PELO VALOR PADRAO
SELECT * FROM TITEM
WHERE (COD_CURSO, VALOR) IN
      (SELECT COD_CURSO, VALOR FROM TCURSO);
      
--SUBCONSULTA NA CLAUSULA FROM. SELECT DE DUAS TABELAS
SELECT ITE.COD_CONTRATO, ITE.VALOR, ITE.COD_CURSO,
       CUR.COD_CURSO, CUR.VALOR
FROM TITEM ITE,
     (SELECT COD_CURSO, VALOR
      FROM TCURSO WHERE VALOR > 500) CUR
      
WHERE CUR.COD_CURSO = ITE.COD_CURSO;       
       

